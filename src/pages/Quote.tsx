import { useState } from "react";
import Navbar from "@/components/Navbar";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Checkbox } from "@/components/ui/checkbox";
import { useToast } from "@/hooks/use-toast";
import { Calculator, FileText, Phone, Mail, MapPin, Clock } from "lucide-react";

const Quote = () => {
  const { toast } = useToast();
  const [formData, setFormData] = useState({
    companyName: "",
    contactName: "",
    email: "",
    phone: "",
    serviceType: "",
    origin: "",
    destination: "",
    cargoType: "",
    weight: "",
    dimensions: "",
    urgency: "",
    additionalServices: [] as string[],
    description: ""
  });

  const handleInputChange = (field: string, value: string) => {
    setFormData(prev => ({ ...prev, [field]: value }));
  };

  const handleServiceChange = (service: string, checked: boolean) => {
    setFormData(prev => ({
      ...prev,
      additionalServices: checked 
        ? [...prev.additionalServices, service]
        : prev.additionalServices.filter(s => s !== service)
    }));
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    // Validation
    if (!formData.companyName || !formData.contactName || !formData.email || !formData.phone || !formData.serviceType) {
      toast({
        title: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô",
        description: "‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î",
        variant: "destructive",
      });
      return;
    }

    // Success message
    toast({
      title: "‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!",
      description: "‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á",
    });

    // Reset form
    setFormData({
      companyName: "",
      contactName: "",
      email: "",
      phone: "",
      serviceType: "",
      origin: "",
      destination: "",
      cargoType: "",
      weight: "",
      dimensions: "",
      urgency: "",
      additionalServices: [],
      description: ""
    });
  };

  const additionalServiceOptions = [
    "‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏†‡∏±‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
    "‡∏ö‡∏£‡∏£‡∏à‡∏∏‡∏´‡∏µ‡∏ö‡∏´‡πà‡∏≠‡∏û‡∏¥‡πÄ‡∏®‡∏©",
    "‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏° GPS",
    "‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
    "‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û",
    "‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ç‡∏∂‡πâ‡∏ô-‡∏•‡∏á",
    "‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö/‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á",
    "‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏î‡πà‡∏ß‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©"
  ];

  return (
    <div className="min-h-screen bg-background">
      <Navbar />
      
      {/* Hero Section */}
      <section className="bg-gradient-to-r from-primary to-primary-glow text-white py-20">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center">
            <h1 className="text-4xl md:text-5xl font-bold mb-6">
              ‡∏Ç‡∏≠‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤
            </h1>
            <p className="text-xl md:text-2xl mb-8 max-w-3xl mx-auto text-white/90">
              ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
              ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
            </p>
          </div>
        </div>
      </section>

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20">
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-12">
          {/* Contact Info */}
          <div className="lg:col-span-1">
            <Card className="sticky top-8">
              <CardHeader>
                <CardTitle className="flex items-center">
                  <Phone className="h-5 w-5 mr-2 text-primary" />
                  ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏≤
                </CardTitle>
                <CardDescription>
                  ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-6">
                <div className="flex items-start space-x-3">
                  <Phone className="h-5 w-5 text-primary mt-1" />
                  <div>
                    <div className="font-medium">‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå</div>
                    <div className="text-muted-foreground">02-123-4567</div>
                    <div className="text-muted-foreground">081-234-5678</div>
                  </div>
                </div>
                
                <div className="flex items-start space-x-3">
                  <Mail className="h-5 w-5 text-primary mt-1" />
                  <div>
                    <div className="font-medium">‡∏≠‡∏µ‡πÄ‡∏°‡∏•</div>
                    <div className="text-muted-foreground">info@logithai.com</div>
                    <div className="text-muted-foreground">sales@logithai.com</div>
                  </div>
                </div>
                
                <div className="flex items-start space-x-3">
                  <MapPin className="h-5 w-5 text-primary mt-1" />
                  <div>
                    <div className="font-medium">‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà</div>
                    <div className="text-muted-foreground text-sm">
                      123 ‡∏ñ‡∏ô‡∏ô‡∏™‡∏≤‡∏ó‡∏£ ‡πÅ‡∏Ç‡∏ß‡∏á‡∏™‡∏µ‡∏•‡∏°<br />
                      ‡πÄ‡∏Ç‡∏ï‡∏ö‡∏≤‡∏á‡∏£‡∏±‡∏Å ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10500
                    </div>
                  </div>
                </div>
                
                <div className="flex items-start space-x-3">
                  <Clock className="h-5 w-5 text-primary mt-1" />
                  <div>
                    <div className="font-medium">‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£</div>
                    <div className="text-muted-foreground text-sm">
                      ‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå-‡∏®‡∏∏‡∏Å‡∏£‡πå: 8:00-18:00<br />
                      ‡πÄ‡∏™‡∏≤‡∏£‡πå: 8:00-12:00<br />
                      ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô 24/7
                    </div>
                  </div>
                </div>

                <div className="pt-4 border-t">
                  <div className="text-sm text-muted-foreground mb-3">
                    üí° <strong>‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö:</strong> ‡∏¢‡∏¥‡πà‡∏á‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î ‡∏¢‡∏¥‡πà‡∏á‡πÑ‡∏î‡πâ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>

          {/* Quote Form */}
          <div className="lg:col-span-2">
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center">
                  <Calculator className="h-6 w-6 mr-2 text-primary" />
                  ‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Ç‡∏≠‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤
                </CardTitle>
                <CardDescription>
                  ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
                </CardDescription>
              </CardHeader>
              <CardContent>
                <form onSubmit={handleSubmit} className="space-y-6">
                  {/* Company Information */}
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                      <Label htmlFor="companyName" className="text-base font-medium">
                        ‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó *
                      </Label>
                      <Input
                        id="companyName"
                        value={formData.companyName}
                        onChange={(e) => handleInputChange("companyName", e.target.value)}
                        placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó"
                        className="mt-1"
                        required
                      />
                    </div>
                    <div>
                      <Label htmlFor="contactName" className="text-base font-medium">
                        ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ *
                      </Label>
                      <Input
                        id="contactName"
                        value={formData.contactName}
                        onChange={(e) => handleInputChange("contactName", e.target.value)}
                        placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠"
                        className="mt-1"
                        required
                      />
                    </div>
                  </div>

                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                      <Label htmlFor="email" className="text-base font-medium">
                        ‡∏≠‡∏µ‡πÄ‡∏°‡∏• *
                      </Label>
                      <Input
                        id="email"
                        type="email"
                        value={formData.email}
                        onChange={(e) => handleInputChange("email", e.target.value)}
                        placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•"
                        className="mt-1"
                        required
                      />
                    </div>
                    <div>
                      <Label htmlFor="phone" className="text-base font-medium">
                        ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå *
                      </Label>
                      <Input
                        id="phone"
                        value={formData.phone}
                        onChange={(e) => handleInputChange("phone", e.target.value)}
                        placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå"
                        className="mt-1"
                        required
                      />
                    </div>
                  </div>

                  {/* Service Information */}
                  <div className="border-t pt-6">
                    <h3 className="text-lg font-semibold mb-4">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£</h3>
                    
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                      <div>
                        <Label htmlFor="serviceType" className="text-base font-medium">
                          ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ *
                        </Label>
                        <Select value={formData.serviceType} onValueChange={(value) => handleInputChange("serviceType", value)}>
                          <SelectTrigger className="mt-1">
                            <SelectValue placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£" />
                          </SelectTrigger>
                          <SelectContent>
                            <SelectItem value="export">‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å</SelectItem>
                            <SelectItem value="import">‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤</SelectItem>
                            <SelectItem value="customs">‡∏û‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∏‡∏•‡∏Å‡∏≤‡∏Å‡∏£</SelectItem>
                            <SelectItem value="domestic">‡∏Ç‡∏ô‡∏™‡πà‡∏á‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®</SelectItem>
                            <SelectItem value="consulting">‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÇ‡∏•‡∏à‡∏¥‡∏™‡∏ï‡∏¥‡∏Å‡∏™‡πå</SelectItem>
                            <SelectItem value="other">‡∏≠‡∏∑‡πà‡∏ô‡πÜ</SelectItem>
                          </SelectContent>
                        </Select>
                      </div>
                      <div>
                        <Label htmlFor="urgency" className="text-base font-medium">
                          ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô
                        </Label>
                        <Select value={formData.urgency} onValueChange={(value) => handleInputChange("urgency", value)}>
                          <SelectTrigger className="mt-1">
                            <SelectValue placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô" />
                          </SelectTrigger>
                          <SelectContent>
                            <SelectItem value="standard">‡∏õ‡∏Å‡∏ï‡∏¥ (7-14 ‡∏ß‡∏±‡∏ô)</SelectItem>
                            <SelectItem value="urgent">‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô (3-7 ‡∏ß‡∏±‡∏ô)</SelectItem>
                            <SelectItem value="express">‡∏î‡πà‡∏ß‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏© (1-3 ‡∏ß‡∏±‡∏ô)</SelectItem>
                            <SelectItem value="same-day">‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß</SelectItem>
                          </SelectContent>
                        </Select>
                      </div>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mt-6">
                      <div>
                        <Label htmlFor="origin" className="text-base font-medium">
                          ‡∏à‡∏∏‡∏î‡∏ï‡πâ‡∏ô‡∏ó‡∏≤‡∏á
                        </Label>
                        <Input
                          id="origin"
                          value={formData.origin}
                          onChange={(e) => handleInputChange("origin", e.target.value)}
                          placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø, ‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢"
                          className="mt-1"
                        />
                      </div>
                      <div>
                        <Label htmlFor="destination" className="text-base font-medium">
                          ‡∏à‡∏∏‡∏î‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á
                        </Label>
                        <Input
                          id="destination"
                          value={formData.destination}
                          onChange={(e) => handleInputChange("destination", e.target.value)}
                          placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡πÇ‡∏ï‡πÄ‡∏Å‡∏µ‡∏¢‡∏ß, ‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô"
                          className="mt-1"
                        />
                      </div>
                    </div>
                  </div>

                  {/* Cargo Information */}
                  <div className="border-t pt-6">
                    <h3 className="text-lg font-semibold mb-4">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h3>
                    
                    <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                      <div>
                        <Label htmlFor="cargoType" className="text-base font-medium">
                          ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
                        </Label>
                        <Input
                          id="cargoType"
                          value={formData.cargoType}
                          onChange={(e) => handleInputChange("cargoType", e.target.value)}
                          placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏≠‡∏¥‡πÄ‡∏•‡πá‡∏Å‡∏ó‡∏£‡∏≠‡∏ô‡∏¥‡∏Å‡∏™‡πå"
                          className="mt-1"
                        />
                      </div>
                      <div>
                        <Label htmlFor="weight" className="text-base font-medium">
                          ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å (‡∏Å‡∏Å.)
                        </Label>
                        <Input
                          id="weight"
                          value={formData.weight}
                          onChange={(e) => handleInputChange("weight", e.target.value)}
                          placeholder="‡πÄ‡∏ä‡πà‡∏ô 1000"
                          className="mt-1"
                        />
                      </div>
                      <div>
                        <Label htmlFor="dimensions" className="text-base font-medium">
                          ‡∏Ç‡∏ô‡∏≤‡∏î (‡∏Å√ó‡∏¢√ó‡∏™ ‡∏ã‡∏°.)
                        </Label>
                        <Input
                          id="dimensions"
                          value={formData.dimensions}
                          onChange={(e) => handleInputChange("dimensions", e.target.value)}
                          placeholder="‡πÄ‡∏ä‡πà‡∏ô 100√ó80√ó60"
                          className="mt-1"
                        />
                      </div>
                    </div>
                  </div>

                  {/* Additional Services */}
                  <div className="border-t pt-6">
                    <h3 className="text-lg font-semibold mb-4">‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏£‡∏¥‡∏°</h3>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      {additionalServiceOptions.map((service) => (
                        <div key={service} className="flex items-center space-x-2">
                          <Checkbox
                            id={service}
                            checked={formData.additionalServices.includes(service)}
                            onCheckedChange={(checked) => handleServiceChange(service, checked as boolean)}
                          />
                          <Label htmlFor={service} className="text-sm font-normal">
                            {service}
                          </Label>
                        </div>
                      ))}
                    </div>
                  </div>

                  {/* Additional Information */}
                  <div className="border-t pt-6">
                    <Label htmlFor="description" className="text-base font-medium">
                      ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
                    </Label>
                    <Textarea
                      id="description"
                      value={formData.description}
                      onChange={(e) => handleInputChange("description", e.target.value)}
                      placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏ó‡∏£‡∏≤‡∏ö..."
                      className="mt-1 min-h-[100px]"
                    />
                  </div>

                  <div className="flex flex-col sm:flex-row gap-4 pt-6">
                    <Button type="submit" size="lg" className="flex-1">
                      <FileText className="h-5 w-5 mr-2" />
                      ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤
                    </Button>
                    <Button type="button" variant="outline" size="lg" className="sm:w-auto">
                      <Phone className="h-5 w-5 mr-2" />
                      ‡πÇ‡∏ó‡∏£‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤
                    </Button>
                  </div>
                </form>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Quote;